{"version":3,"sources":["common/Input/Input.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ItemContact/ItemContact.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","redux/phoneBook/phoneBookActions.js","common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","actionAddContacts","createAction","removeContacts","filterContacts","event","payload","target","value","Input","label","arg","id","useRef","nanoid","current","className","s","wrapperInput","labelTitle","htmlFor","input","ContactForm","onSubmitForm","dispatch","useDispatch","useState","name","number","dataForm","setdataForm","addDataForm","e","prevState","onSubmit","preventDefault","objData","form","type","onChange","pattern","title","required","btnAdd","ItemContact","normalizeName","item","btnDel","onClick","ContactList","props","filterName","list","map","Filter","valueFilterContacts","useSelector","state","contacts","filter","App","contactsBook","filterBookContacts","split","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","app","obj","some","alert","length","normalizedData","toLowerCase","includes","contactsItemReducer","createReducer","filterContactsReducer","_","phoneBookReducer","combineReducers","persistConfig","key","version","storage","contactsPersistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.0ed4657d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"Input_wrapperInput__1WYXU\",\"labelTitle\":\"Input_labelTitle__3bDB-\",\"input\":\"Input_input__KAHKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__13Q_8\",\"btnDel\":\"ItemContact_btnDel__2IseJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const actionAddContacts = createAction(\"contacts/add\")\n\nexport const removeContacts = createAction(\"contacts/remove\")\n\nexport const filterContacts = createAction(\"contacts/filter\", (event) => {\n  return {\n    payload:event.target.value,\n  }\n})\n","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport s from './Input.module.css';\n\nconst Input = ({ label, ...arg }) => {\n  const { current: id } = useRef(nanoid());\n  return (\n    <div className={s.wrapperInput}>\n      <label className={s.labelTitle} htmlFor={id}>\n        {label}:\n      </label>\n      <input className={s.input} id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","import { useState } from 'react';\nimport {useDispatch} from 'react-redux'\nimport { nanoid } from 'nanoid';\nimport { actionAddContacts } from 'redux/phoneBook/phoneBookActions';\nimport Input from '../../common/Input';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmitForm}) => {\n  const dispatch = useDispatch()\n  const [dataForm, setdataForm] = useState({\n    name: '',\n    number: '',\n   \n  });\n\n  const resetForm = () =>\n    setdataForm({\n      name: '',\n      number: '',\n    });\n\n  const addDataForm = e => {\n    return setdataForm(prevState => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      id: nanoid(),\n      ...dataForm\n    };\n   \n    dispatch(actionAddContacts(objData))\n    onSubmitForm(objData);\n    resetForm();\n  };\n\n  const { name, number } = dataForm;\n  return (\n    <form onSubmit={onSubFormData} className={s.form}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={addDataForm}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        onChange={addDataForm}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n","import PropTypes from 'prop-types';\nimport s from './ItemContact.module.css';\nimport { removeContacts } from 'redux/phoneBook/phoneBookActions'; \nimport { useDispatch } from 'react-redux';\n\nconst ItemContact = ({ name, number,id, normalizeName }) => {\n\n  const dispatch = useDispatch()\n  return (\n    <li className={s.item} id={id}>\n      {normalizeName(name)}: {number}\n      <button\n        className={s.btnDel}\n        onClick={()=>dispatch(removeContacts(id))\n        }\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default ItemContact;\n\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\nimport s from './ContactList.module.css';\n\nconst ContactList = props => {\n  const { filterName, filterContacts , normalizeName } = props;\n\n  return (\n    <ul className={s.list}>\n      {filterContacts(filterName).map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            normalizeName={normalizeName}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filterName: PropTypes.string,\n  filterContacts: PropTypes.func,\n  onClickBtnDel: PropTypes.func,\n  normalizeName: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/phoneBook/phoneBookActions';\n\nimport Input from '../../common/Input';\n\nfunction Filter() {\n  const valueFilterContacts = useSelector((state) => state.contacts.filter)\n  const dispatch = useDispatch()\n  \n\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={(event)=>dispatch(filterContacts(event))}\n      name=\"filter\"\n      value={valueFilterContacts}\n    />\n  );\n}\n\nFilter.propTypes = {\n  onChangeDate: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;\n\n","// import { useState, useEffect } from 'react';\nimport {useSelector } from 'react-redux';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport s from './App.module.css';\n\n\nconst App = () => {\n\n  const contactsBook = useSelector((state) => state.contacts.item)\n  const filterBookContacts = useSelector((state) => state.contacts.filter)\n \n  const normalizeName = name =>\n    name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  const addContacts = obj => {\n   \n    const isHaveName = contactsBook.some(({ name }) => name === obj.name);\n\n    if (isHaveName) {\n      return alert(`${normalizeName(obj.name)} is alredy in contacts.`);\n    }};\n\n\n  const filterContacts = filterBookContacts => {\n    const normalizedData = filterBookContacts.toLowerCase();\n    const arrayFilter = contactsBook.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedData),\n    );\n    return arrayFilter;\n  };\n\n  return (\n    <div className={s.app}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmitForm={addContacts} />\n      <h2>Contacts</h2>\n\n    {contactsBook.length > 1 && (\n    <Filter\n      value={contactsBook.length < 1 ? '' : filterBookContacts}\n    />\n  )}\n\n      {!contactsBook.length && <p>Please, add contact!</p>}\n        <ContactList\n          normalizeName={normalizeName}\n          filterContacts={filterContacts}\n          filterName={filterBookContacts}\n        />\n      \n    </div>\n  );\n};\n\n\nexport default App;\n","import {combineReducers,createReducer } from \"@reduxjs/toolkit\";\nimport {actionAddContacts,removeContacts,filterContacts} from './phoneBookActions'\n\nconst initialItems = [];\nconst contactsItemReducer = createReducer(initialItems, {\n    [actionAddContacts]: (state, { payload }) => {\n        const contact = [...state, payload];\n        return contact\n    },\n    [removeContacts]:(state, {payload}) => state.filter(item => item.id !== payload)\n})\n\nconst filterContactsReducer = createReducer(\"\", {\n    [filterContacts]:(_,{payload}) => payload\n})\n\nconst phoneBookReducer = combineReducers({\n    item: contactsItemReducer,\n    filter: filterContactsReducer  \n})\n\nexport default phoneBookReducer","import {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\n\nconst persistConfig = {\n  key: 'item',\n  version: 1,\n  storage,\n}\n\nconst contactsPersistedReducer = persistReducer(persistConfig, phoneBookReducer)\n\n\nconst store = configureStore ({\n  reducer: {\n    contacts: contactsPersistedReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools:process.env.NODE_ENV !== \"production\"\n})\n\nexport const persistor = persistStore(store)\n\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './components/App';\nimport store,{persistor} from 'redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}