{"version":3,"sources":["common/Input/Input.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ItemContact/ItemContact.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","common/Input/Input.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ItemContact/ItemContact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/phoneBook/phoneBookActions.js","components/App/App.jsx","redux/phoneBook/phoneBookReducer.js","redux/store.js","index.js"],"names":["module","exports","Input","label","arg","id","useRef","nanoid","current","className","s","wrapperInput","labelTitle","htmlFor","input","ContactForm","confirmContact","useState","name","setName","number","setNumber","normalizeName","split","map","word","firstUpCaseLetter","charAt","toUpperCase","anoterLetter","substring","join","resetForm","onSubmit","e","preventDefault","objData","form","type","onChange","target","value","pattern","title","required","btnAdd","ItemContact","onDeleteContact","item","btnDel","onClick","ContactList","filterContactsName","list","Filter","filterChangeInput","event","actionAddContacts","createAction","removeContacts","filterContacts","App","contactsBook","useSelector","state","contacts","filterValueName","filter","dispatch","useDispatch","newContact","setNewContact","deleteContactId","setDeleteContactId","useEffect","isHaveName","some","toast","error","icon","success","useMemo","normalizedFilter","toLowerCase","finalArray","contact","includes","length","info","warning","useCallback","app","theme","contactsItemReducer","createReducer","payload","filterContactsReducer","_","phoneBookReducer","combineReducers","persistConfig","key","version","storage","contactsPersistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.15d8cd04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperInput\":\"Input_wrapperInput__1WYXU\",\"labelTitle\":\"Input_labelTitle__3bDB-\",\"input\":\"Input_input__KAHKD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ItemContact_item__13Q_8\",\"btnDel\":\"ItemContact_btnDel__2IseJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1IksY\"};","import { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\n\nimport s from './Input.module.css';\n\nconst Input = ({ label, ...arg }) => {\n  const { current: id } = useRef(nanoid());\n  return (\n    <div className={s.wrapperInput}>\n      <label className={s.labelTitle} htmlFor={id}>\n        {label}:\n      </label>\n      <input className={s.input} id={id} {...arg} />\n    </div>\n  );\n};\n\nInput.propTypes = {\n  label: PropTypes.string,\n  arg: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n};\n\nexport default Input;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport Input from '../../common/Input';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ confirmContact }) => {\n    const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const normalizeName = name => name\n      .split(' ')\n      .map(word => {\n        const firstUpCaseLetter = word.charAt(0).toUpperCase();\n        const anoterLetter = word.substring(1);\n        return `${firstUpCaseLetter}${anoterLetter}`;\n      })\n      .join(' ');\n\n  const onSubFormData = e => {\n    e.preventDefault();\n\n    const objData = {\n      id: nanoid(),\n      name:normalizeName(name),\n      number\n    };\n\n    confirmContact(objData);\n    resetForm();\n\n  };\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n       <>\n      <h1>Phonebook</h1>\n      <form onSubmit={onSubFormData} className={s.form}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        onChange={(e) => setName(e.target.value)}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Input\n        label=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        onChange={(e) => setNumber(e.target.value)}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={s.btnAdd}>\n        {' '}\n        Add contact\n      </button>\n      </form>\n      <h2>Contacts</h2>\n    </>\n  );\n};\nContactForm.propTypes = {\n  confirmContact: PropTypes.func,\n};\n\nexport default ContactForm;\n\n","import PropTypes from 'prop-types';\nimport s from './ItemContact.module.css';\n\nconst ItemContact = ({\n  onDeleteContact,\n  name,\n  number,\n  id}) => {\n\n  return (\n    <li className={s.item} id={id}>\n      {name}: {number}\n      <button\n        className={s.btnDel}\n        onClick={onDeleteContact}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onDeleteContact: PropTypes.func,\n  id:PropTypes.string,\n};\n\n\nexport default ItemContact;\n\n","import PropTypes from 'prop-types';\nimport ItemContact from './ItemContact';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({onDeleteContact,filterContactsName}) => {\n\n  return (\n    <ul className={s.list}>\n      {filterContactsName && filterContactsName.map(({ id, name, number }) => {\n        return (\n          <ItemContact\n            id={id}\n            key={id}\n            name={name}\n            number={number}\n            onDeleteContact={()=>onDeleteContact(id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  filterContactsName: PropTypes.array,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport Input from '../../common/Input';\n\nfunction Filter({filterChangeInput,value}) {\n\n  return (\n    <Input\n      label=\"Find contacts by name\"\n      type=\"text\"\n      onChange={(event)=>filterChangeInput(event.target.value)}\n      name=\"filter\"\n      value={value}\n    />\n  );\n}\n\nFilter.propTypes = {\n  filterChangeInput: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default Filter;","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const actionAddContacts = createAction(\"contacts/add\")\n\nexport const removeContacts = createAction(\"contacts/remove\")\n\nexport const filterContacts = createAction(\"contacts/filter\")\n\n","import {useSelector } from 'react-redux';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport { actionAddContacts,removeContacts,filterContacts } from 'redux/phoneBook/phoneBookActions';\nimport { ToastContainer,toast } from 'react-toastify/dist/react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from './App.module.css';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\n\nconst App = () => {\n   const contactsBook = useSelector((state) => state.contacts.item);\n  const filterValueName = useSelector((state) => state.contacts.filter);\n\n  const dispatch = useDispatch()\n\n  const [newContact, setNewContact] = useState(null);\n  const [deleteContactId, setDeleteContactId] = useState(null);\n\n  \n  //ADD_CONTACT\n  const confirmContact = (contact) => setNewContact(contact);\n\n  useEffect(() => {\n    if (!newContact) return;\n    const isHaveName = contactsBook.some(({ name }) => name === newContact.name);\n\n    if (isHaveName) {\n      toast.error(`Контакт з ${newContact.name} вже існує :((`, { icon: `❌` });\n      setNewContact(null);\n    }\n    if (!isHaveName) {\n      dispatch(actionAddContacts(newContact));\n      toast.success(`Контакт  ${newContact.name} добавлено до списку контактів :))`, {\n        icon: `✅`\n      });\n      setNewContact(null);\n    }\n  }, [contactsBook, dispatch, newContact]);\n\n  // FILTER CONTACTS\n\n  const filterChangeInput = (value) => dispatch(filterContacts(value))\n  \n  //Варіант з хуком USE MEMO\n  const filterContactsName = useMemo(() => {\n    const normalizedFilter = filterValueName.toLowerCase();\n\n    const finalArray = contactsBook && contactsBook.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n\n    if (finalArray.length === 0 && filterValueName !== \"\") {\n      toast.info(`Усі контакти по запиту \"${filterValueName.toUpperCase()}\" були видалені ...✋!!`)\n      toast.warning(`Очистіть поле для запиту, щоб побачити усі контакти :)))`)\n    }\n    return finalArray;\n  }, [contactsBook, filterValueName]);\n  \n  //DELETE_CONTACT \n\n  const onDeleteContact = useCallback((id) => setDeleteContactId(id),[]);\n\n  useEffect(() => {\n    if (!deleteContactId) return;\n    dispatch(removeContacts(deleteContactId));\n    toast.success(`Контакт видалений зі списку контактів :))`, {\n        icon: `❎`\n      });\n    setDeleteContactId(null);\n\n  }, [deleteContactId, dispatch])\n  \n  return (\n\n\n     <div className={s.app}>\n      \n      {<ContactForm\n        confirmContact={confirmContact}\n      />}\n    {contactsBook.length > 0 && (\n        <Filter\n          filterChangeInput={filterChangeInput}\n          value={filterValueName}\n      />\n  )}\n    {!contactsBook.length  && <p>Please, add contact!</p>}\n      <ContactList\n        filterContactsName={filterContactsName}\n        onDeleteContact={onDeleteContact}\n      />\n      <ToastContainer theme=\"dark\"/>\n    </div>\n\n  );\n};\n\n\nexport default App;\n","import {combineReducers,createReducer } from \"@reduxjs/toolkit\";\nimport {actionAddContacts,removeContacts,filterContacts} from './phoneBookActions'\n\nconst initialItems = [];\nconst contactsItemReducer = createReducer(initialItems, {\n    [actionAddContacts]: (state, { payload }) => [...state, payload],\n    [removeContacts]:(state, {payload}) => state.filter(item => item.id !== payload)\n})\n\nconst filterContactsReducer = createReducer(\"\", {\n    [filterContacts]: (_, { payload }) => payload.toLowerCase()\n})\n\nconst phoneBookReducer = combineReducers({\n    item: contactsItemReducer,\n    filter: filterContactsReducer  \n})\n\nexport default phoneBookReducer","import {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from './phoneBook/phoneBookReducer'\n\nconst persistConfig = {\n  key: 'item',\n  version: 1,\n  storage,\n}\n\nconst contactsPersistedReducer = persistReducer(persistConfig, phoneBookReducer)\n\n\nconst store = configureStore ({\n  reducer: {\n    contacts: contactsPersistedReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools:process.env.NODE_ENV !== \"production\"\n})\n\nexport const persistor = persistStore(store)\n\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './components/App';\nimport store,{persistor} from 'redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}